import 'base.grobb';

struct demo_settings
{
  string soundtrack;
  bool silent = true;
  effect_settings[] effects;
};

struct effect_settings
{
  string factory;
  string name;
  int start_time;
  int end_time;
  string settings;
  bool force = false;
};

struct tonemap_settings
{
  float shoulder = 0.5;
  float max_white = 5.0;
};

struct tonemap_reinhard_settings
{
  float exposure = 1;
  float min_white = 1;
};

struct full_tonemap_settings
{
  bool enabled = false;
  float shoulder = 0.8;
  float toe = 0.2;
  float white_point = 5.0;
  float black_point = 0.1;
  float cross_over = 0.2;
};

struct scale_bias
{
  float scale = 1;
  float bias = 0.5;
};

struct plexus_grouping
{
  float eps = 0.01;
  float min_dist = 0.1;
  float max_dist = 200;
  int num_neighbours = 10;
  int num_nearest = 2;
};

struct plexus_deform
{
  float blur_kernel = 10;
  float noise_strength = 0;
  float perlin_scale = 10;
};

struct plexus_sphere
{
  float radius = 600;
  int slices = 13;
  int stacks = 6;
  int layers = 14;
};

struct intro_settings
{
  string texture;
  color tint;
  color inner_color;
  color outer_color;
  int num_particles;
  float text_min_dist;
  float text_max_dist;
  float blur_radius = 15;
  plexus_grouping plexus;
  plexus_sphere sphere;
  plexus_deform deform;
  tonemap_reinhard_settings tonemap;
};

struct ray_marcher_settings
{
  
};

struct cluster_settings
{
  
};

struct camera_settings
{
  float yaw = 0;
  float pitch = 0;
  float roll = 0;
  vec3 pos = {0, 0, 0};
};

struct boid_settings
{
  float separation_scale = 1.5;
  float cohesion_scale = 1.0;
  float alignment_scale = 1.0;
  float wander_scale = 10.0;
  float follow_scale = 5.0;
  float cohesion_distance = 500.0;
  float separation_distance = 10.0;
  float max_speed = 10.0;
  float max_force = 10.0;
  float waypoint_radius = 10.0;
  int num_flocks = 1;
  int boids_per_flock = 1;
};

struct lens_flare_settings
{
  scale_bias scale_bias;
  float dispersion = 0.1;
  int num_ghosts = 5;
  float halo_width = 0.2;
  float strength = 0.1;
};

struct landscape_settings
{
  camera_settings camera;
  boid_settings boids;
  string particle_texture;
  tonemap_settings tonemap;
  tonemap_reinhard_settings tonemap2;
  lens_flare_settings lens_flare;
};

struct blob_settings
{
    camera_settings camera;
};

struct cloth_settings
{
    camera_settings camera;
    float damping = 0.01;
    vec3 gravity = {0, -1, 0};
};


struct noise_settings
{
  int layer_lock = -1;
  int num_layers = 1;
  float max_scale = 1000;
  float scale_factor = 0.5;
  float max_opacity = 1;
  float opacity_factor = 0.5;
  float turbulence = 10;
};

struct plexus_settings
{
  full_tonemap_settings tonemap;
  plexus_grouping plexus;
  plexus_sphere sphere;
  plexus_deform deform;
  camera_settings camera;
  noise_settings noise;
};

struct sample_settings
{
  tonemap_reinhard_settings tonemap;  
};

struct tunnel_settings
{
  tonemap_reinhard_settings tonemap;
  plexus_grouping plexus;
};